{
  "components": [
    {
      "name": "Button",
      "variant": null,
      "description": "Base button component with support for multiple hierarchies, sizes, loading states, and full accessibility features. Supports text-only buttons and buttons with icons.",
      "import": "import { Button } from '@andes/button';",
      "styles": ["@import '@andes/button/index';"],
      "props": [
        {
          "name": "children",
          "description": "Custom content - text or complex content including icons",
          "type": "ReactNode",
          "default": "undefined",
          "required": true
        },
        {
          "name": "hierarchy",
          "description": "Style hierarchy of the button",
          "type": "'loud' | 'quiet' | 'mute' | 'transparent'",
          "default": "'loud'",
          "required": false
        },
        {
          "name": "size",
          "description": "Size of the button element",
          "type": "'small' | 'medium' | 'large'",
          "default": "'large'",
          "required": false
        },
        {
          "name": "disabled",
          "description": "Whether the button should be disabled",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "loading",
          "description": "Shows loading state with progress indicator circular component",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "fullWidth",
          "description": "Whether the button should use full available width",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "onClick",
          "description": "Callback function called when button is clicked",
          "type": "function(event)",
          "default": "undefined",
          "required": false
        },
        {
          "name": "backgroundType",
          "description": "Determines the background type where the button is placed, used when placed over colored surfaces",
          "type": "'default' | 'complexBackground'",
          "default": "'default'",
          "required": false
        },
        {
          "name": "className",
          "description": "Custom CSS class for additional styling",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "href",
          "description": "Location where to point the button when used as link",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "id",
          "description": "Unique identifier for the button",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "srAnnouncement",
          "description": "Screen reader label for spinner when loading is active",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "srLabel",
          "description": "Accessible label for screen readers",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "type",
          "description": "Type attribute for button native element",
          "type": "'button' | 'submit' | 'reset' | string",
          "default": "'button'",
          "required": false
        }
      ],
      "size_specifications": {
        "component_heights": {
          "small": "24px",
          "medium": "32px",
          "large": "48px"
        },
        "component_widths": {
          "default": "auto",
          "fullWidth": "100%"
        },
        "padding": {
          "small": "0 8px (andes-spacing-8)",
          "medium": "0 12px (andes-spacing-12)",
          "large": "0 24px (andes-spacing-24)"
        },
        "typography_tokens": {
          "small": "body-small-emphasis (12px font, semibold weight)",
          "medium": "body-medium-emphasis (14px font, semibold weight)",
          "large": "body-large-emphasis (16px font, semibold weight)"
        },
        "border_radius": {
          "small": "4px (border-radius-4)",
          "medium": "5px (border-radius-5)",
          "large": "6px (border-radius-6)"
        },
        "colors": {
          "states": {
            "idle": {
              "loud": "blue-500 background, white text",
              "quiet": "blue-150 background, blue-500 text",
              "mute": "transparent background, blue-500 text"
            },
            "hover": {
              "loud": "blue-600 background, white text",
              "quiet": "blue-200 background, blue-500 text",
              "mute": "blue-100 background, blue-500 text"
            }
          }
        }
      },
      "notes": [
        "Uses semibold font weight (font-weight-semibold) for all sizes",
        "Supports loading state with animated spinner overlay",
        "Box-shadow focus ring with blue-300 color for accessibility",
        "Smooth transitions (0.18s ease-out) for background and color changes"
      ],
      "examples": [
        {
          "title": "Basic Button",
          "code": "import { Button } from '@andes/button';\n\n<Button hierarchy=\"loud\">Sign up</Button>"
        },
        {
          "title": "Loading Button",
          "code": "import { Button } from '@andes/button';\n\n<Button loading={loading} srAnnouncement=\"Processing...\">\n  Sign Up\n</Button>"
        }
      ]
    },
    {
      "name": "Button",
      "variant": "ButtonText",
      "description": "Helper component for text content within buttons, especially when combining with icons or other elements.",
      "import": "import { ButtonText } from '@andes/button';",
      "styles": ["@import '@andes/button/index';"],
      "props": [
        {
          "name": "children",
          "description": "Text content for the button",
          "type": "ReactNode",
          "default": "undefined",
          "required": true
        }
      ],
      "size_specifications": {
        "typography_tokens": {
          "default": "Inherits from parent button size"
        },
        "layout": {
          "display": "block",
          "text_overflow": "ellipsis",
          "white_space": "nowrap"
        }
      },
      "notes": [
        "Automatically handles spacing when used with icons",
        "Provides text overflow ellipsis for long content",
        "Flex: 1 to take available space in button layout"
      ],
      "examples": [
        {
          "title": "ButtonText with Icon",
          "code": "import { Button, ButtonText } from '@andes/button';\n\n<Button>\n  <IconComponent />\n  <ButtonText>Button Label</ButtonText>\n</Button>"
        }
      ]
    },
    {
      "name": "Button",
      "variant": "DropdownButton",
      "description": "Button component that opens a dropdown menu with list items. Supports keyboard navigation and accessibility features.",
      "import": "import { DropdownButton } from '@andes/button';",
      "styles": ["@import '@andes/button/index';", "@import '@andes/list/base';", "@import '@andes/floating-menu/base';"],
      "props": [
        {
          "name": "children",
          "description": "Button text content",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "listContent",
          "description": "Array of menu items with title, description, href, onClick properties",
          "type": "Array<{title: string, description?: string, href?: string, onClick?: function}>",
          "default": "undefined",
          "required": true
        },
        {
          "name": "className",
          "description": "Custom CSS class",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "dialogSrLabel",
          "description": "Accessible label for the dropdown menu dialog",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "disabled",
          "description": "Whether the dropdown button should be disabled",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "fullWidth",
          "description": "Whether button should use full available width",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "hierarchy",
          "description": "Button style hierarchy",
          "type": "'loud' | 'quiet'",
          "default": "'loud'",
          "required": false
        },
        {
          "name": "id",
          "description": "Unique identifier",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "menuWidth",
          "description": "Width of the dropdown menu",
          "type": "number | string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "side",
          "description": "Menu placement relative to button",
          "type": "'bottom' | 'bottom-start' | 'bottom-end' | 'top' | 'top-start' | 'top-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'",
          "default": "'bottom'",
          "required": false
        },
        {
          "name": "size",
          "description": "Size of the dropdown button",
          "type": "'medium' | 'large'",
          "default": "'large'",
          "required": false
        },
        {
          "name": "srLabel",
          "description": "Screen reader label for the trigger button",
          "type": "string",
          "default": "undefined",
          "required": false
        }
      ],
      "size_specifications": {
        "component_heights": {
          "medium": "32px",
          "large": "48px"
        },
        "layout": {
          "display": "inline-block",
          "chevron_icon": "Includes dropdown chevron indicator",
          "direction": "Button with chevron icon, opens floating menu below"
        }
      },
      "notes": [
        "Integrates with floating-menu component for positioning",
        "Supports keyboard navigation (Arrow keys, Enter, Escape)",
        "Menu items can have href links or onClick handlers",
        "Accessible menu dialog with proper ARIA attributes",
        "Only supports medium and large sizes"
      ],
      "data_attributes": [
        "aria-disabled for disabled state",
        "role and accessibility attributes for screen readers"
      ],
      "examples": [
        {
          "title": "Basic Dropdown",
          "code": "import { DropdownButton } from '@andes/button';\n\nconst options = [\n  { title: 'Option 1', onClick: () => {} },\n  { title: 'Option 2', href: '/link' }\n];\n\n<DropdownButton listContent={options}>Edit</DropdownButton>"
        }
      ]
    },
    {
      "name": "Button",
      "variant": "SplitButton",
      "description": "Button component with a primary action and a secondary dropdown menu for additional actions.",
      "import": "import { SplitButton } from '@andes/button';",
      "styles": ["@import '@andes/button/index';", "@import '@andes/list/base';", "@import '@andes/floating-menu/base';"],
      "props": [
        {
          "name": "children",
          "description": "Primary button text content",
          "type": "string",
          "default": "undefined",
          "required": true
        },
        {
          "name": "listContent",
          "description": "Array of secondary menu items",
          "type": "Array<{title: string, href?: string, onClick?: function}>",
          "default": "undefined",
          "required": true
        },
        {
          "name": "className",
          "description": "Custom CSS class",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "dialogSrLabel",
          "description": "Accessible label for menu dialog",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "hierarchy",
          "description": "Button style hierarchy",
          "type": "'loud' | 'quiet'",
          "default": "'loud'",
          "required": false
        },
        {
          "name": "id",
          "description": "Unique identifier",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "onClick",
          "description": "Callback function for primary button action",
          "type": "function(event)",
          "default": "undefined",
          "required": false
        },
        {
          "name": "side",
          "description": "Menu placement relative to button",
          "type": "'bottom' | 'bottomRight' | 'top' | 'topRight'",
          "default": "'bottomRight'",
          "required": false
        },
        {
          "name": "srLabel",
          "description": "Screen reader label for the trigger button",
          "type": "string",
          "default": "undefined",
          "required": false
        }
      ],
      "size_specifications": {
        "layout": {
          "display": "inline-flex",
          "structure": "Primary button + separator + chevron dropdown",
          "direction": "Two-part button with primary action left, dropdown right"
        }
      },
      "notes": [
        "Combines primary action with secondary menu options",
        "Visual separator between main button and dropdown trigger",
        "Supports both loud and quiet hierarchies",
        "Menu positioning optimized for split button layout"
      ],
      "data_attributes": [
        "aria-disabled for disabled state",
        "role and accessibility attributes for screen readers"
      ],
      "examples": [
        {
          "title": "Split Button",
          "code": "import { SplitButton } from '@andes/button';\n\nconst options = [\n  { title: 'Secondary Action 1', onClick: () => {} },\n  { title: 'Secondary Action 2', onClick: () => {} }\n];\n\n<SplitButton listContent={options} onClick={() => console.log('Primary action')}>Primary Action</SplitButton>"
        }
      ]
    },
    {
      "name": "Button",
      "variant": "ProgressButton",
      "description": "Button component with built-in progress states for multi-step operations, showing loading and completion states.",
      "import": "import { ProgressButton } from '@andes/button';",
      "styles": ["@import '@andes/button/index';"],
      "props": [
        {
          "name": "children",
          "description": "Button content for default state",
          "type": "ReactNode",
          "default": "undefined",
          "required": true
        },
        {
          "name": "className",
          "description": "Custom CSS class",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "hierarchy",
          "description": "Button style hierarchy",
          "type": "'loud' | 'quiet'",
          "default": "'loud'",
          "required": false
        },
        {
          "name": "id",
          "description": "Unique identifier",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "loading",
          "description": "Shows progress state with custom label",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "onClick",
          "description": "Callback function called when button is clicked",
          "type": "function(event)",
          "default": "undefined",
          "required": false
        },
        {
          "name": "progressLabel",
          "description": "Custom content when loading is active",
          "type": "ReactNode",
          "default": "undefined",
          "required": false
        },
        {
          "name": "progressSrAnnouncement",
          "description": "Screen reader announcement for progress changes",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "timeout",
          "description": "Timeout in milliseconds to delay finished state",
          "type": "number",
          "default": "1000",
          "required": false
        }
      ],
      "size_specifications": {
        "layout": {
          "display": "block",
          "states": "default → loading → finished",
          "direction": "Full-width button with state transitions"
        }
      },
      "notes": [
        "Designed for full-width usage in forms and processes",
        "Automatic state management with timeout control",
        "Custom progress labels for better user feedback",
        "Accessibility announcements for state changes",
        "Visual transitions between states with animations"
      ],
      "data_attributes": [
        "aria-disabled for disabled state",
        "aria-live for progress announcements",
        "data-progress-state for current state"
      ],
      "examples": [
        {
          "title": "Progress Button",
          "code": "import { ProgressButton } from '@andes/button';\n\n<ProgressButton\n  loading={isLoading}\n  progressLabel=\"Processing...\"\n  progressSrAnnouncement=\"Please wait, processing your request\"\n  onClick={handleSubmit}\n>\n  Submit\n</ProgressButton>"
        }
      ]
    },
    {
      "name": "Button",
      "variant": "FloatingActionButton",
      "description": "Circular floating action button with icon, supporting expanded and collapsed states for primary actions.",
      "import": "import { FloatingActionButton } from '@andes/button';",
      "styles": ["@import '@andes/button/index';"],
      "props": [
        {
          "name": "icon",
          "description": "Icon element to display (img or svg)",
          "type": "ReactElement",
          "default": "undefined",
          "required": true
        },
        {
          "name": "behavior",
          "description": "Controls button expansion state",
          "type": "'expanded' | 'collapsed'",
          "default": "'expanded'",
          "required": false
        },
        {
          "name": "className",
          "description": "Custom CSS class",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "hierarchy",
          "description": "Button style hierarchy",
          "type": "'loud' | 'quiet'",
          "default": "'loud'",
          "required": false
        },
        {
          "name": "id",
          "description": "Unique identifier",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "onClick",
          "description": "Click handler function",
          "type": "function(event)",
          "default": "undefined",
          "required": false
        },
        {
          "name": "size",
          "description": "Size of the floating action button",
          "type": "'small' | 'large'",
          "default": "'large'",
          "required": false
        },
        {
          "name": "text",
          "description": "Text label for expanded state",
          "type": "string",
          "default": "undefined",
          "required": false
        },
        {
          "name": "srLabel",
          "description": "Screen reader label for accessibility",
          "type": "string",
          "default": "undefined",
          "required": false
        }
      ],
      "size_specifications": {
        "component_heights": {
          "small": "32px",
          "large": "48px"
        },
        "component_widths": {
          "collapsed_small": "32px",
          "collapsed_large": "48px",
          "expanded": "auto (based on text + padding)"
        },
        "border_radius": {
          "small": "16px (andes-button-border-radius-sm)",
          "large": "24px (andes-button-border-radius-lg)"
        },
        "padding": {
          "default": "14px (andes-button-padding-lg)"
        },
        "layout": {
          "display": "inline-flex",
          "align_items": "center",
          "justify_content": "center",
          "direction": "icon left, text right (when expanded)"
        }
      },
      "notes": [
        "Circular shape with high border radius for floating appearance",
        "Supports both icon-only (collapsed) and icon+text (expanded) states",
        "Typically positioned fixed for floating behavior",
        "Only supports small and large sizes (no medium)",
        "Icon is always required, text is optional for expanded state"
      ],
      "data_attributes": [
        "aria-label for accessibility when no text is provided",
        "data-behavior for expanded/collapsed state"
      ],
      "examples": [
        {
          "title": "Floating Action Button",
          "code": "import { FloatingActionButton } from '@andes/button';\nimport Add16 from '@andes/icons/Add16';\n\n<FloatingActionButton\n  icon={<Add16 />}\n  text=\"Add item\"\n  behavior=\"expanded\"\n  onClick={() => console.log('Add clicked')}\n/>"
        },
        {
          "title": "Collapsed FAB",
          "code": "import { FloatingActionButton } from '@andes/button';\nimport Add16 from '@andes/icons/Add16';\n\n<FloatingActionButton\n  icon={<Add16 />}\n  behavior=\"collapsed\"\n  srLabel=\"Add new item\"\n  onClick={() => console.log('Add clicked')}\n/>"
        }
      ]
    },
    {
      "name": "Badge",
      "variant": null,
      "description": "Small indicator for statuses, counts, or new content. Used inline or over other elements to highlight status or notifications.",
      "import": "import { Badge } from '@andes/badge';",
      "styles": ["@import '@andes/badge/index';"],
      "props": [
        {
          "name": "children",
          "description": "Badge content",
          "type": "ReactNode",
          "default": "undefined",
          "required": true
        },
        {
          "name": "variant",
          "description": "Visual variant of the badge",
          "type": "'default' | 'success' | 'warning' | 'error'",
          "default": "'default'",
          "required": false
        },
        {
          "name": "size",
          "description": "Size of the badge",
          "type": "'small' | 'medium'",
          "default": "'medium'",
          "required": false
        }
      ],
      "size_specifications": {
        "component_heights": {
          "small": "16px",
          "medium": "20px"
        },
        "padding": {
          "small": "2px 6px",
          "medium": "4px 8px"
        },
        "typography_tokens": {
          "small": "caption (11px font, medium weight)",
          "medium": "body-small (12px font, medium weight)"
        },
        "border_radius": {
          "default": "12px (fully rounded)"
        },
        "colors": {
          "variants": {
            "default": "gray-100 background, gray-700 text",
            "success": "green-100 background, green-700 text",
            "warning": "yellow-100 background, yellow-700 text",
            "error": "red-100 background, red-700 text"
          }
        }
      },
      "notes": [
        "Fully rounded corners for pill-like appearance",
        "Semantic color variants for different states",
        "Optimized for inline usage with text content"
      ],
      "examples": [
        {
          "title": "Status Badge",
          "code": "import { Badge } from '@andes/badge';\n\n<Badge variant=\"success\">Active</Badge>"
        },
        {
          "title": "Notification Badge",
          "code": "import { Badge } from '@andes/badge';\n\n<Badge variant=\"error\" size=\"small\">3</Badge>"
        }
      ]
    },
    {
      "name": "Card",
      "variant": null,
      "description": "Flexible card container component for displaying content with consistent styling and optional interactive states.",
      "import": "import { Card } from '@andes/card';",
      "styles": ["@import '@andes/card/index';"],
      "props": [
        {
          "name": "children",
          "description": "Card content",
          "type": "ReactNode",
          "default": "undefined",
          "required": true
        },
        {
          "name": "variant",
          "description": "Visual variant of the card",
          "type": "'default' | 'outlined' | 'elevated'",
          "default": "'default'",
          "required": false
        },
        {
          "name": "padding",
          "description": "Internal padding size",
          "type": "'sm' | 'md' | 'lg'",
          "default": "'md'",
          "required": false
        },
        {
          "name": "clickable",
          "description": "Whether the card is clickable",
          "type": "boolean",
          "default": "false",
          "required": false
        },
        {
          "name": "onClick",
          "description": "Click handler for interactive cards",
          "type": "function(event)",
          "default": "undefined",
          "required": false
        }
      ],
      "size_specifications": {
        "padding": {
          "sm": "12px",
          "md": "16px",
          "lg": "24px"
        },
        "border_radius": {
          "default": "8px (border-radius-8)"
        },
        "colors": {
          "variants": {
            "default": "white background, subtle border",
            "outlined": "white background, prominent border",
            "elevated": "white background, box-shadow elevation"
          },
          "states": {
            "clickable_hover": "gray-50 background"
          }
        },
        "elevation": {
          "elevated": "0 2px 8px rgba(0, 0, 0, 0.12)"
        }
      },
      "notes": [
        "Flexible container for grouping related content",
        "Supports interactive states for clickable cards",
        "Consistent border radius and spacing system",
        "Elevation variant provides subtle depth"
      ],
      "examples": [
        {
          "title": "Basic Card",
          "code": "import { Card } from '@andes/card';\n\n<Card variant=\"outlined\" padding=\"md\">\n  <h3>Card Title</h3>\n  <p>Card content goes here</p>\n</Card>"
        },
        {
          "title": "Clickable Card",
          "code": "import { Card } from '@andes/card';\n\n<Card clickable onClick={() => navigate('/details')}>\n  <h3>Interactive Card</h3>\n  <p>Click to navigate</p>\n</Card>"
        }
      ]
    }
  ],
  "metadata": {
    "version": "3.0.0",
    "lastUpdated": "2025-01-12T15:00:00Z",
    "totalComponents": 4,
    "packages": ["@andes/button", "@andes/badge", "@andes/card"],
    "tags": ["button", "badge", "card", "action", "indicator", "container", "form", "interactive", "status", "notification"]
  }
}